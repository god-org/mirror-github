name: Mirror

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Test Mirrors
        run: |
          date_suffix=$(date +"%Y-%m-%d")
          output_file="logs/mirrors-${date_suffix}.md"
          file="https://github.com/actions/actions-runner-controller/releases/latest/download/actions-runner-controller.yaml"

          {
            echo "# GitHub 镜像测试结果 (${date_suffix})"
            echo ""
            echo "|  镜像  |  状态  |  时间  |"
            echo "| :----: | :----: | :----: |"
          } > $output_file

          success_records=()
          fail_records=()

          while IFS= read -r mirror; do
            echo "正在测试 $mirror"
            start_time=$(date +%s%3N)

            if wget --timeout=5 --tries=1 -qO /dev/null "${mirror}/${file}"; then
              status="✅"
            else
              status="❌"
            fi

            end_time=$(date +%s%3N)
            elapsed_time=$(echo "scale=3; ($end_time - $start_time)/1000" | bc)
            formatted_elapsed_time=$(printf "%.3f" $elapsed_time)

            record="$mirror | $status | $formatted_elapsed_time"
            if [ "$status" = "✅" ]; then
              success_records+=("$record")
            else
              fail_records+=("$record")
            fi

          done < docs/mirrors.txt

          IFS=$'\n' sorted_success=($(sort -t '|' -k 3 -n <<<"${success_records[*]}"))
          for record in "${sorted_success[@]}"; do
            echo "| $record |" >> $output_file
          done

          IFS=$'\n' sorted_fail=($(sort -t '|' -k 3 -n <<<"${fail_records[*]}"))
          for record in "${sorted_fail[@]}"; do
            echo "| $record |" >> $output_file
          done

          find "logs" -name "mirrors-*.md" -type f | sort | head -n -30 | xargs -r rm

          cp -af "$output_file" "README.md"

          echo "TIME=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Upload to repository
        uses: stefanzweifel/git-auto-commit-action@master
        with:
          commit_message: ${{ env.TIME }}

      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
